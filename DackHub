local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/huyen33332025/DackxD1-Hub/main/Dack-Hub-Ui'))()

local loadedkey = loadstring(game:HttpGet('https://raw.githubusercontent.com/huyen33332025/Quyhoachdong/main/key'))()

getgenv().inputkey = ""

function loadmain()
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
    local Window = OrionLib:MakeWindow({Name = "Dack Hub [SHARINGANS] Project XXL", HidePremium = false, SaveConfig = true, IntroEnabled = true, IntroText = "Dack Hub", CloseCallback  = true})
	local Player = game.Players.LocalPlayer
    _G.WalkSpeed = "Integer"
    local ts = game:GetService("TeleportService")

    local Live = workspace.Live
    local Map = workspace.Map
    local NPCS = workspace.NPCS
    local QuestMarkers = workspace.QuestMarkers
    local Name = "Ihateit.json"
    local Protest = game.ReplicatedStorage.Quests

    local InstantKill = function(Toggle, Target)
        if Toggle then
            if Target:FindFirstChildWhichIsA("Humanoid") then
                local H = Target:FindFirstChildWhichIsA("Humanoid")
                if H.Health ~= H.MaxHealth then
                    H.Health = 0
                end
            end
        end
    end

    local Settings
    if not pcall(function() readfile("V.G Hub//" .. Name) end) then
        writefile("V.G Hub//" .. Name, game:GetService("HttpService"):JSONEncode(Des))
    end

    local Mobs = {}
    for i,v in next, Live:GetChildren() do
        if not table.find(Mobs, v.Name) then
            table.insert(Mobs, v.Name)
        end
    end
    local Quests = {}
    for i,v in next, Player.Quests:GetChildren() do
        if not table.find(Quests, v.Name) then
            table.insert(Quests, v.Name)
        end
    end

    local Teleport = function(A)
        Player.Character:FindFirstChild("HumanoidRootPart").CFrame = A 
    end
    local Hit = function(A)
        return game.ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("BladeCombatRemote"):FireServer(false, Vector3.new(A:FindFirstChildWhichIsA("BasePart").Position), CFrame.new(A:FindFirstChildWhichIsA("BasePart").Position))
    end
    local Equip = function()
        if not Player.Character:FindFirstChildWhichIsA("Tool", true) then
            local v = Player.Backpack:FindFirstChild("Combat Script", true).Parent
            Player.Character.Humanoid:EquipTool(v) 
        end
    end
    local Tab2 = Window:MakeTab({
        Name = "Auto Farm",
        Icon = "rbxassetid://4483345998", 
        PremiumOnly = false
    })

    local Tab3 = Window:MakeTab({
        Name = "Gui Game",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local Tab = Window:MakeTab({
        Name = "Player",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })  
    local Tab4 = Window:MakeTab({
        Name = "Mics",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
    local Tab5 = Window:MakeTab({
        Name = "Credit",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    Tab:AddSlider({
        Name = "WalkSpeed",
        Min = 0,
        Max = 200,
        Default = 5,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "WalkSpeed(s)",
        Callback = function(Value)
            _G.WalkSpeed = Value
        end    
    })

    Tab:AddButton({
        Name = "Change WalkSpeed",
        Callback = function()
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.WalkSpeed
            OrionLib:MakeNotification({
                Name = "Change WalkSpeed",
                Content = "Your running speed has been changed to: ".._G.WalkSpeed..".",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end    
    })
    Tab:AddSection({
        Name = "Chest Stats"  
    })
    local Luck = Player.PlayerValues.LuckStat.Value
    Tab:AddButton({
        Name = "Check Your Luck",
        Callback = function()
            if Luck == 0 then
                OrionLib:MakeNotification({
                    Name = "Luck",
                    Content = "Your current luck is: 100% (x1)",
                    Image = "rbxassetid://4483345998",
                    time = 5
                })
            elseif Luck == 1 then
                OrionLib:MakeNotification({
                    Name = "Luck",
                    Content = "Your current luck is: 125% (x1.25)",
                    Image = "rbxassetid://4483345998",
                    time = 5
                })
            elseif Luck == 2 then
                OrionLib:MakeNotification({
                    Name = "Luck",
                    Content = "Your current luck is: 150% (x1.5)",
                    Image = "rbxassetid://4483345998",
                    time = 5
                })
            elseif Luck == 3 then
                OrionLib:MakeNotification({
                    Name = "Luck",
                    Content = "Your current luck is: 200% (x2)",
                    Image = "rbxassetid://4483345998",
                    time = 5
                })
            end
        end
    })
    local DodgeChance = Player.PlayerValues.DodgeChance.Value
    Tab:AddButton({
        Name = "Check Your Dodge Chance",
        Callback = function()
            OrionLib:MakeNotification({
                Name = "Luck",
                Content = "Your current Dodge chance is: "..DodgeChance.."0%",
                Image = "rbxassetid://4483345998",
                time = 5
            })
        end
    })
    local CriticalStrikeChance = Player.PlayerValues.CriticalStrikeChance.Value
    Tab:AddButton({
        Name = "Check Your Critical Strike Chance",
        Callback = function()
            OrionLib:MakeNotification({
                Name = "Critical Strike Chance",
                Content = "Your current critical strike chance is: "..CriticalStrikeChance.."0%",
                Image = "rbxassetid://4483345998",
                time = 5
            })
        end
    })
    Tab2:AddSection({
        Name = "Auto Farm"  
    })
    local EnableStartQuest = true
    local function AutoStartQuest()
        while wait() and EnableStartQuest == true do 
            pcall(function()
                local Quest = Player.PlayerGui.Menu.QuestFrame
                if not Quest.Visible then    
                    Teleport(workspace.QuestBoards:FindFirstChild(Quest1, true).CFrame)
                    wait(1)
                    fireclickdetector(workspace.QuestBoards:FindFirstChild(Quest1, true).ClickDetector)
                end
                if Quest.Visible then
                    Teleport(CFrame.new(QuestMarkers[Quest.QuestName.Text].Position + Vector3.new(0, 10, 0)))
                    for i,v in next, Live:GetChildren() do
                        if string.find(Quest.QuestName.Text, v.Name) then
                                v.HumanoidRootPart.CFrame = Player.Character:GetModelCFrame() * CFrame.new(0,0,0)
                                Equip()
                                Hit(v)
                                InstantKill(true, v)
                        end
                    end
                end
            end)
        end
    end
    Tab2:AddDropdown({
        Name = "Select Quest",
        Default = "Defeat 5 Bandits",
        Options = {"Defeat 5 Bandits","Defeat 10 Black Cat Pirates","Defeat 10 Buggy Pirates","Defeat 10 Kumate Tribesman","Defeat 10 Desert Bandits","Defeat 10 Hired Thugs","Defeat 10 Saibamen","Defeat 10 Saibablues","Defeat 10 Saibareds","Defeat 10 Red Ribbon Soldiers","Defeat 10 Kickboxers","Defeat 10 Kung-Fu Masters","Defeat 10 Chi Experts","Defeat 10 Evil Crane Students","Defeat 10 Evil Turtle Students"},
        Callback = function(Value)
            Quest1 = Value
        end    
    })
    Tab2:AddToggle({
        Name = "Auto Farm",
        Default = false,
        Flag = "togglefarm",
        Callback = function(Value)
            local bool = Value
            if bool == true then
                EnableStartQuest = true
                if EnableStartQuest == true then
                    OrionLib:MakeNotification({
                        Name = "Auto  Farm",
                        Content = "Turned ON successfully",
                        Image = "rbxassetid://4483345998",
                        Time = 5
                    })
                    AutoStartQuest()
                end
            elseif bool == false then
                EnableStartQuest = false
                OrionLib:MakeNotification({
                    Name = "Auto Farm",
                    Content = "Turned OFF successfully",
                    Image = "rbxassetid://4483345998",
                    Time = 5
                })
            end
        end
    })
 
    Tab2:AddSection({
        Name = "Auto Chest"  
    })
    local AutochestValue = true
    local function AutoChest()
        local player = game.Players.LocalPlayer
        local chestsFolder = workspace:FindFirstChild("Chests")
        if chestsFolder then
            local chests = chestsFolder:GetChildren()
            for i = 1, #chests do
                local v = chests[i]
                if v.Transparency  == 0 and AutochestValue == true then
                    Player.Character.HumanoidRootPart.CFrame = v.CFrame
                    task.wait(0.15)
                elseif AutochestValue == false then
                    break
                end
            end
        end
    end
    Tab2:AddToggle({
        Name = "Auto Collect Chest",
        Default = false,
        Callback = function(Value)
            local bool = Value
            if bool == true then
                AutochestValue = true
                if AutochestValue == true then
                    OrionLib:MakeNotification({
                        Name = "Auto Chest",
                        Content = "Turned ON successfully, collecting CHEST",
                        Image = "rbxassetid://4483345998",
                        Time = 5
                    })
                    while wait(1) do
                        AutoChest()
                    end
                end
            elseif bool == false then
                AutochestValue = false
                OrionLib:MakeNotification({
                    Name = "Auto Chest",
                    Content = "Turned OFF successfully",
                    Image = "rbxassetid://4483345998",
                    Time = 5
                })
            end
        end
    })
    
    Tab2:AddSection({
        Name = "Treasure Hunt"  
    })
    Tab2:AddButton({
        Name = "Collect Treasure Hunt (Free Chest)",
        Callback = function()
            local Treasurehunt = workspace:FindFirstChild(Player.Name.."StandardChest")
            OrionLib:MakeNotification({
                Name = "Auto Treasure Hunt",
                Content = "Turned on successfully, collecting TREASURE HUNT",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            local name = Treasurehunt.PlayerName.Value
            if name == Player.Name then
                Player.Character.HumanoidRootPart.CFrame = Treasurehunt.Ground.CFrame
            end
        end
    })
    Tab2:AddButton({
        Name = "Collect Treasure Hunt (Armor Chest)",
        Callback = function()
            local Treasurehunt = workspace:FindFirstChild(Player.Name.."ArmorChest")
            OrionLib:MakeNotification({
                Name = "Auto Treasure Hunt",
                Content = "Turned on successfully, collecting TREASURE HUNT",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            local name = Treasurehunt.PlayerName.Value
            if name == Player.Name then
                Player.Character.HumanoidRootPart.CFrame = Treasurehunt.Ground.CFrame
            end
        end
    })
    Tab2:AddButton({
        Name = "Collect Treasure Hunt (Devil Fruit Chest)",
        Callback = function()
            local Treasurehunt = workspace:FindFirstChild(Player.Name.."DevilFruitChest")
            OrionLib:MakeNotification({
                Name = "Auto Treasure Hunt",
                Content = "Turned on successfully, collecting TREASURE HUNT",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            local name = Treasurehunt.PlayerName.Value
            if name == Player.Name then
                Player.Character.HumanoidRootPart.CFrame = Treasurehunt.Ground.CFrame
            end
        end
    })
    
    Tab2:AddButton({
        Name = "Collect Treasure Hunt (Accessory Chest)",
        Callback = function()
            local Treasurehunt = workspace:FindFirstChild(Player.Name.."ArmorChest")
            OrionLib:MakeNotification({
                Name = "Auto Treasure Hunt",
                Content = "Turned on successfully, collecting TREASURE HUNT",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            local name = Treasurehunt.PlayerName.Value
            if name == Player.Name then
                Player.Character.HumanoidRootPart.CFrame = Treasurehunt.Ground.CFrame
            end
        end
    })
    Tab2:AddSection({
		Name = "Delete Bags & Items"
	})
    Tab2:AddButton({
        Name = "Delete Common Bag",
        Callback = function()
            local bag = Player.Backpack:FindFirstChild("Bag")
            OrionLib:MakeNotification({
                Name = "Delete Common Bag",
                Content = "Deleting common bag",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            for _, tool in pairs(Player.Backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name == "Bag" and tool.BagPart.Overhead.Rarity.Text == "Common" then
                    tool:Destroy()
                    wait(0.05)
                end
            end
            OrionLib:MakeNotification({
                Name = "Delete Common Bag",
                Content = "Congratulations! Deleted all common bag",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    })
        Tab2:AddButton({
        Name = "Delete Uncommon Bag",
        Callback = function()
            local bag = Player.Backpack:FindFirstChild("Bag")
            OrionLib:MakeNotification({
                Name = "Delete Uncommon Bag",
                Content = "Deleting uncommon bag",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            for _, tool in pairs(Player.Backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name == "Bag" and tool.BagPart.Overhead.Rarity.Text == "Uncommon" then
                    tool:Destroy()
                    wait(0.1)
                end
            end
            OrionLib:MakeNotification({
                Name = "Delete Uncommon Bag",
                Content = "Congratulations! Deleted all uncommon bag",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    })
    Tab2:AddButton({
        Name = "Delete Common Item",
        Callback = function()
            local bag = Player.Backpack:FindFirstChild("Bag")
            OrionLib:MakeNotification({
                Name = "Delete Common Item",
                Content = "Deleting common items",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            for _, tool in pairs(Player.Backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name == "Newspaper" or tool:IsA("Tool") and tool.Name == "Rokakaka" then
                    tool:Destroy()
                    wait(0.1)
                end
            end
            OrionLib:MakeNotification({
                Name = "Delete Common Item",
                Content = "Congratulations! Deleted all common item",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    })
    Tab2:AddSection({
        Name = "Auto Collect Fruit"
    })
    Tab2:AddButton({
        Name = "Collect Fruit",
        Callback = function()
            local player = game.Players.LocalPlayer
            local chestsFolder = workspace:FindFirstChild("Drops")
            OrionLib:MakeNotification({
                Name = "Collect Fruit",
                Content = "Turned on successfully, collecting FRUIT",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            if chestsFolder then
            local chests = chestsFolder:GetChildren()

            for _, chest in ipairs(chests) do
                if chest:IsA("Tool") then
                    player.Character.HumanoidRootPart.CFrame = chest.Handle.CFrame
                    task.wait(0.2)
                end
            end
            end
        end
    })
    Tab2:AddSection({
        Name = "Redeem Code"
    })
    Tab2:AddButton({
        Name = "Redeem All Codes",
        Callback = function()
            OrionLib:MakeNotification({
                Name = "Redeem Code",
                Content = "Code is being applied",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            local codeRemote = game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("CodeRemote")

            local function redeemCode(code)
            local args = {
                [1] = code
            }
            codeRemote:FireServer(unpack(args))
            end

            local function redeemAllCodes(player)
            local codesFolder = player and player:FindFirstChild("Codes")
            if not codesFolder then
                print("Codes folder not found.")
                return
            end

            for _, codeValue in ipairs(codesFolder:GetChildren()) do
                if codeValue:IsA("BoolValue") then
                    local codeName = codeValue.Name
                    redeemCode(codeName)
                    wait(0.5) 
                end
            end
            end

            local localPlayer = game:GetService("Players").LocalPlayer
            if localPlayer then
                redeemAllCodes(localPlayer)
            end
        end
    })
    Tab2:AddSection({
		Name = "Auto Spec"
	})
    Tab2:AddButton({
        Name = "Check Spin Count",
        Callback = function()
            OrionLib:MakeNotification({
                Name = "Spins",
                Content = "Your current spin(s) count is: "..Player.PlayerValues.Spins.Value..".",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    })

	local specsList = {"Indra's Mangekyo Sharingan v2", "Rinnegan v1", "Rinnegan v2", "Rinnegan v3", "Rinnegan v4", "Sasuke's Rinnegan v1", "Itachi's Mangekyo Sharingan v4", "Itachi's Mangekyo Sharingan v5", "Sasuke's Mangekyo Sharingan v1", "Madara's Mangekyo Sharingan v1", "Itachi's Mangekyo Sharingan v2"}
    local specsList2 = {"Indra's Mangekyo Sharingan v1", "Itachi's Mangekyo Sharingan v3", "Itachi's Mangekyo Sharingan v1"}
    local Autospinspecrare = true
        Tab2:AddToggle({
            Name = "Auto Spin Spec {Rare}",
            Default = false,
            Callback = function(Value)
                local bool = Value
                if bool == true then
                    local Autospinspecrare = true
                    if Autospinspecrare == true then
                        local remoteEvent = game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("SpinRemote")
                        if Player.PlayerValues.Spins.Value == 0 then
                        OrionLib:MakeNotification({
                            Name = "Spin Spec System",
                            Content = "Sorry! You have 0 Spin, so this feature cannot be used!",
                            Image = "rbxassetid://4483345998",
                            Time = 5
                        })
                        elseif Player.PlayerValues.Spins.Value > 0 then
                            OrionLib:MakeNotification({
                            Name = "Spin Spec System",
                            Content = "Spinning Rare Specialization",
                            Image = "rbxassetid://4483345998",
                            Time = 5
                            })
                            local function isSpecInList(spec)
                                for _, value in ipairs(specsList2) do
                                    if value == spec then
                                        return true
                                    end
                                end
                                return false
                            end

                            local function repeatFireRemote()
                                while wait(0.3) do
                                    local localPlayer = game:GetService("Players").LocalPlayer
                                    local spec = localPlayer and localPlayer.PlayerValues.Specialization.Value
                                    if isSpecInList(spec) then
                                        OrionLib:MakeNotification({
                                            Name = "Spin Spec System",
                                            Content = "Congratulations! Found the Rare Race",
                                            Image = "rbxassetid://4483345998",
                                            Time = 5
                                        })
                                        break
                                    end
                                    if Player.PlayerValues.Spins.Value == 0 then
                                        OrionLib:MakeNotification({
                                            Name = "Spin Spec System",
                                            Content = "Sorry! You have run out of Spins (0)",
                                            Image = "rbxassetid://4483345998",
                                            Time = 5
                                        })
                                        break
                                    end
                                remoteEvent:FireServer(1)
                                end
                            end

                            repeatFireRemote()
                        end  
                    end   
                elseif bool == false then
                    Autospinspecrare = false
                end
            end 
        })
    local Autospinspecleg = true
    Tab2:AddToggle({
            Name = "Auto Spin Spec {Legendary}",
            Default = false,
            Callback = function(Value)
                local bool = Value
                if bool == true then
                    local Autospinspecleg = true
                    if Autospinspecleg == true then
                        local remoteEvent = game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("SpinRemote")
                        if Player.PlayerValues.Spins.Value == 0 then
                        OrionLib:MakeNotification({
                            Name = "Spin Spec System",
                            Content = "Sorry! You have 0 Spins, so this feature cannot be used!",
                            Image = "rbxassetid://4483345998",
                            Time = 5
                        })
                    elseif Player.PlayerValues.Spins.Value > 0 then
                        OrionLib:MakeNotification({
                        Name = "Spin Spec System",
                        Content = "Spinning Legendary Specialization",
                        Image = "rbxassetid://4483345998",
                        Time = 5
                        })
                        local function isSpecInList(spec)
                            for _, value in ipairs(specsList) do
                                if value == spec then
                                    return true
                                end
                            end
                            return false
                            end

                            local function repeatFireRemote()
                                while wait(0.3) do
                                    local localPlayer = game:GetService("Players").LocalPlayer
                                    local spec = localPlayer and localPlayer.PlayerValues.Specialization.Value
                                    if isSpecInList(spec) then
                                        OrionLib:MakeNotification({
                                            Name = "Spin Spec System",
                                            Content = "Congratulations! Found the Legendary Race",
                                            Image = "rbxassetid://4483345998",
                                            Time = 5
                                        })
                                        break
                                    end
                                    if Player.PlayerValues.Spins.Value == 0 then
                                        OrionLib:MakeNotification({
                                            Name = "Spin Spec System",
                                            Content = "Sorry! You have run out of Spins (0)",
                                            Image = "rbxassetid://4483345998",
                                            Time = 5
                                        })
                                        break
                                    end
                                remoteEvent:FireServer(1)
                                end
                            end

                            repeatFireRemote()
                        end  
                    end  
                elseif bool == false then
                    Autospinspecleg = false 
                end
            end 
        })
    Tab3:AddSection({
        Name = "Visible GUI"
    })
    Tab3:AddButton({
        Name = "Open Specialization Spin Gui",
        Callback = function()
            Player.PlayerGui.Menu.SpinGui.Visible = true
        end
    })
    Tab3:AddButton({
        Name = "Open Race Spin Gui",
        Callback = function()
            Player.PlayerGui.Menu.RaceSpinGui.Visible = true
        end
    })
        Tab3:AddButton({
            Name = "Open DF Spin Gui",
            Callback = function()
                Player.PlayerGui.Menu.DFShopGui.Visible = true
            end
        })
        Tab3:AddButton({
            Name = "Open Prestige Shop",
            Callback = function()
                Player.PlayerGui.Menu.PrestigeShop.Visible = true
            end
        })
        Tab3:AddButton({
            Name = "Open Prestige Gui (Fruit/Ability)",
            Callback = function()
                Player.PlayerGui.Menu.PrestigeGuiFruit.Visible = true
            end
        })
        Tab3:AddButton({
            Name = "Open Prestige Gui (Coins)",
            Callback = function()
                Player.PlayerGui.Menu.PrestigeGuiCoins.Visible = true
            end
        })
        Tab4:AddButton({
            Name = "Rejoin",
            Callback = function()
                ts:Teleport(game.PlaceId, Player)
            end
        })
        Tab4:AddButton({
            Name = "Server Hop",
            Callback = function()
                local module = loadstring(game:HttpGet"https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua")()
                module:Teleport(game.PlaceId)
            end
        })
        Tab5:AddLabel("<<<< Dack Hub Version 1.1 >>>>")
        Tab5:AddLabel(">>> | Owner Hub: DackxD1 |")
    OrionLib:Init()
end
function readkey()
    if readfile("/DackHub/key.txt") == loadedkey then
        loadmain()
    else
        Rayfield:Notify({
            Title = "Please enter key",
            Content = "We may have updated the key, please re-enter the key",
            Duration = 3,
            Image = 4483362458,
         })
        local Window = Rayfield:CreateWindow({
            Name = "Key System",
            LoadingTitle = "Loading Key System",
            LoadingSubtitle = "by DackxD1",
            ConfigurationSaving = {
                Enabled = true,
                FolderName = nil, -- Create a custom folder for your hub/game
                FileName = "DackHub"
            },
            Discord = {
                Enabled = true,
                Invite = "discord.gg/psP7YFjw9v", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
                RememberJoins = true -- Set this to false to make them join the discord every time they load it up
            },
            KeySystem = false, -- Set this to true to use our key system
            KeySettings = {
                Title = "Dack Hub",
                Subtitle = "Key System",
                Note = "Join the discord (https://discord.gg/psP7YFjw9v)",
                FileName = "DackHubKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
                SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
                GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
                Key = {"Hello"}
            }
        })
        local Tab = Window:CreateTab("Key System")
        local Input = Tab:CreateInput({
            Name = "Key:",
            PlaceholderText = "Enter Key",
            RemoveTextAfterFocusLost = false,
            Callback = function(Text)
                getgenv().inputkey = Text
            end,
         })
         local Button = Tab:CreateButton({
            Name = "Check Key",
            Callback = function()
                if getgenv().inputkey == loadedkey then
                    writefile("/DackHub/key.txt", loadedkey)
                    Rayfield:Notify({
                        Title = "Correct Key",
                        Content = "You have found the correct key.",
                        Duration = 3,
                        Image = 4483362458,
                     })
                     task.wait(3)
                    Rayfield:Destroy()
                    loadmain()
                else
                    Rayfield:Notify({
                        Title = "Incorrect Key",
                        Content = "You have submitted wrong key.",
                        Duration = 3,
                        Image = 4483362458,
                     })
                end
            end,
         })
    end
end

if isfolder("/DackHub") then
    if isfile("/DackHub/key.txt","") then
        readkey()
    else
        writefile("/DackHub/key.txt","")
        readkey()
    end
else
    makefolder("DackHub")
    writefile("/DackHub/key.txt","")
    readkey()
end

